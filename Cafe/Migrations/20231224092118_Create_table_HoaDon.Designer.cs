// <auto-generated />
using System;
using Cafe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cafe.Migrations
{
    [DbContext(typeof(ApplicationDbcontext))]
    [Migration("20231224092118_Create_table_HoaDon")]
    partial class Create_table_HoaDon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Cafe.Models.HoaDon", b =>
                {
                    b.Property<string>("HoaDonID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KhachHangID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NhanVienID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SanPhamID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SoLuong")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("HoaDonID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("NhanVienID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("Cafe.Models.KhachHang", b =>
                {
                    b.Property<string>("KhachHangID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KhachHangName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KhachHangID");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("Cafe.Models.NhanVien", b =>
                {
                    b.Property<string>("NhanVienID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NhanVienName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NhanVienID");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("Cafe.Models.SanPham", b =>
                {
                    b.Property<string>("SanPhamID")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gia")
                        .HasColumnType("TEXT");

                    b.Property<string>("SanPhamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SoLuong")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SanPhamID");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("Cafe.Models.HoaDon", b =>
                {
                    b.HasOne("Cafe.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDon")
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDon")
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe.Models.SanPham", "SanPham")
                        .WithMany("HoaDon")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Cafe.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Cafe.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Cafe.Models.SanPham", b =>
                {
                    b.Navigation("HoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
